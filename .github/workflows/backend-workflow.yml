name: Authenticket Backend Workflow

on:
  push:
    branches:
      - Liseon617-patch-1
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up Secrets as Environment Variables
        run: |
          echo "AUTHENTICKET_SECRET_KEY=${{ secrets.AUTHENTICKET_SECRET_KEY }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_DATABASE_ID=${{ secrets.AUTHENTICKET_DATABASE_ID }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_FRONTEND_DEV_URL=${{ secrets.AUTHENTICKET_FRONTEND_DEV_URL }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_FRONTEND_PRODUCTION_URL=${{ secrets.AUTHENTICKET_FRONTEND_PRODUCTION_URL }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_BACKEND_DEV_URL=${{ secrets.AUTHENTICKET_BACKEND_DEV_URL }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_BACKEND_PRODUCTION_URL=${{ secrets.AUTHENTICKET_BACKEND_PRODUCTION_URL }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_LOADBALANCER_URL=${{ secrets.AUTHENTICKET_LOADBALANCER_URL }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_S3_BUCKET_NAME=${{ secrets.AUTHENTICKET_S3_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_SMTP_USERNAME=${{ secrets.AUTHENTICKET_SMTP_USERNAME }}" >> $GITHUB_ENV
          echo "AUTHENTICKET_SMTP_PASSWORD=${{ secrets.AUTHENTICKET_SMTP_PASSWORD }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> $GITHUB_ENV
          echo "CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "CLOUD_AWS_CREDENTIALS_SECRET_KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}" >> $GITHUB_ENV
          echo "CLOUD_AWS_REGION_STATIC=${{ secrets.CLOUD_AWS_REGION_STATIC }}" >> $GITHUB_ENV

      - name: Build Backend
        working-directory: backend
        run: mvn clean install

      - name: Junits Testing
        working-directory: backend
        run: mvn test

      - name: Build & Push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: authen2023/authenticket-backend
          tags: latest
          registry: docker.io
          dockerfile: ./backend/Dockerfile.ci
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
